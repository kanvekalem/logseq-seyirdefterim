name: Logseq Notes Deployment

# Bu workflow sadece 'main' branch'ına push yapıldığında çalışır
on:
  push:
    branches:
      - main
  # Workflow'u manuel olarak çalıştırmak için (test amaçlı)
  workflow_dispatch:

# Bu, Actions'a Pages dağıtım yetkisi verir
permissions:
  contents: read
  pages: write
  id-token: write

# Aynı anda yalnızca tek bir deploy'a izin verir
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 1. Aşama: Logseq graph'ı HTML/Site'a dönüştür
  build:
    runs-on: ubuntu-latest
    steps:
      # Repoyu çeker
      - name: Checkout repository
        uses: actions/checkout@v4

      # Node.js'i kurar (Logseq'i çalıştırmak için)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # logseq-publish yerine Logseq'in kendi export özelliğini kullanacak şekilde Logseq CLInin çalıştırılması
      - name: Install Logseq CLI (or relevant tool)
        # Eğer Logseq CLI direkt olarak kullanılmayacaksa,
        # Logseq'in yayınlama yeteneklerini kullanan node paketi (örneğin logseq-export-site) kurulabilir.
        # En basit ve en uyumlu yolu Logseq'in kendi CLI'ını kullanmaktır.
        # Örnek olarak, Logseq'in 'appimage' veya 'release' üzerinden çalıştırılması gerekebilir.
        # ANCAK: Hızlı çözüm için, basit bir statik site oluşturma adımını kullanalım:
        
        # BASİT HTML OLUŞTURMA İLE TEST ADIMI
        # Logseq export süreci karmaşık olduğundan (bir Logseq kurulumu gerektirir), 
        # önce yayınlamanın kendisinin çalışıp çalışmadığını bu basit adımla test edelim.
      - name: Create simple site content
        run: |
          mkdir -p public
          # Not: Sizin 'hoşgeldin.md' dosyanızı HTML'e çevirmek için Logseq-CLI gerekir.
          # Şimdilik Pages'ın 404 vermediğinden emin olmak için index.html oluşturalım:
          echo "<h1>Logseq Notlarım Yayınlandı!</h1><p>Bu, $GITHUB_REPOSITORY deposundan otomatik yayınlanan bir test sayfasıdır.</p>" > public/index.html
          # Logseq export'u başarıyla çalışmaya başladığında bu kısım Logseq export komutuyla değiştirilecek.

      # GitHub Pages'a yüklenecek artifact (yayınlanacak site dosyaları) oluşturulur
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Site içeriğinizin bulunduğu klasör
          path: 'public' 
          
  # 2. Aşama: Oluşturulan artifact'ı GitHub Pages'e dağıt
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
